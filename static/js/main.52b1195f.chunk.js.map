{"version":3,"sources":["components/Result.js","components/App.js","index.js"],"names":["Result","props","useState","error","setError","undefined","species","setSpecies","color","setColor","useEffect","fetch","pokemon","url","then","response","ok","json","data","i","names","length","language","name","scoreHP","stats","base_stat","scoreATK","scoreDEF","scoreSATK","scoreSDEF","scoreSPD","className","href","target","style","border","onClick","event","preventDefault","borderBottom","borderRight","dexNumber","src","sprites","front_default","alt","width","height","borderTop","types","type","position","backgroundColor","opacity","clipPath","top","left","transform","App","hasSearched","setHasSearched","errorSetup","setErrorSetup","pokeList","setPokeList","typeList","setTypeList","typeRef","setTypeRef","query","setQuery","typePrimary","setTypePrimary","typeSecondary","setTypeSecondary","fixedOrder","setFixedOrder","searching","setSearching","errorSearch","setErrorSearch","typePrimaryList","setTypePrimaryList","typeSecondaryList","setTypeSecondaryList","typePrimaryReady","setTypePrimaryReady","typeSecondaryReady","setTypeSecondaryReady","results","setResults","orderedResults","setOrderedResults","ordering","setOrdering","console","log","list","map","item","slot","filter","newList","j","push","queryList","toLowerCase","normalize","replace","split","indexOf","newResults","handleResults","unorderedResults","sort","a","b","parseInt","onSubmit","handleSubmit","htmlFor","id","placeholder","maxLength","value","onChange","disabled","t","checked","result","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52b1195f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Result = (props) => {\r\n\r\n    // Hooks de estado\r\n    const [error, setError] = useState(false);\r\n    const [species, setSpecies] = useState(undefined);\r\n    const [color, setColor] = useState(undefined);\r\n\r\n    // Hooks de efeito\r\n    useEffect(() => {\r\n        // --- Buscar informação da espécie que falta na informação de pokémon\r\n        fetch(props.pokemon.species.url)\r\n\t\t\t.then(response => {\r\n\t\t\t\tif (response.ok === false) setError(true);\r\n\t\t\t\tresponse.json()\r\n\t\t\t\t\t.then(data => {\r\n\t\t\t\t\t\tfor (let i = 0; i < data.names.length; i++) {\r\n                            if (data.names[i].language.name === 'en') {\r\n                                setSpecies(data.names[i].name);\r\n                                break;\r\n                            }\r\n                        }\r\n                        setColor(data.color.name);\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n    }, []);\r\n\r\n    // Constantes usadas na renderização\r\n    const scoreHP = props.pokemon.stats[0].base_stat / 255;\r\n    const scoreATK = props.pokemon.stats[1].base_stat / 255;\r\n    const scoreDEF = props.pokemon.stats[2].base_stat / 255;\r\n    const scoreSATK = props.pokemon.stats[3].base_stat / 255;\r\n    const scoreSDEF = props.pokemon.stats[4].base_stat / 255;\r\n    const scoreSPD = props.pokemon.stats[5].base_stat / 255;\r\n\r\n    // Renderizar\r\n    return (\r\n        <a\r\n            className=\"result__link\"\r\n            href={'https://bulbapedia.bulbagarden.net/wiki/' + (species ?? 'MissingNo') + '_(Pokémon)'}\r\n            target=\"_blank\"\r\n            style={{border: '4px solid ' + color ?? 'black'}}\r\n            onClick={event => {if (species === undefined) event.preventDefault()}}\r\n            >\r\n            {error ?\r\n            <span className=\"result__error\">Oops! Não foi possível obter os dados desse pokémon :(</span>\r\n            :\r\n            <>\r\n            <div className=\"result__title\" style={{borderBottom: '2px solid ' + color ?? 'black'}}>\r\n                <span\r\n                    className=\"result__dex\"\r\n                    style={{borderRight: '2px solid ' + color ?? 'black'}}\r\n                    >\r\n                    {'#' + (props.pokemon.dexNumber ?? '???')}\r\n                </span>\r\n                <span className=\"result__name\">{species ?? 'Carregando...'}</span>\r\n            </div>\r\n            <img\r\n                className=\"result__avatar\"\r\n                src={props.pokemon.sprites.front_default ??\r\n                    'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/0.png'}\r\n                alt={props.pokemon.name ?? 'Carregando...'}\r\n                width=\"100\"\r\n                height=\"100\"\r\n            />\r\n            <div\r\n                className=\"result__typeFlex\"\r\n                style={{\r\n                    borderTop: '2px solid ' + color ?? 'black',\r\n                    borderBottom: '2px solid ' + color ?? 'black'\r\n                }}\r\n                >\r\n                <span className=\"result__type\">\r\n                    {props.pokemon.types.length > 0 ? (props.pokemon.types[0].type.name ?? '---') : '---'}\r\n                </span>\r\n                <span className=\"result__type\">\r\n                    {props.pokemon.types.length > 1 ? (props.pokemon.types[1].type.name ?? '---') : '---'}\r\n                </span>\r\n            </div>\r\n            <div className=\"result__statFlex\">\r\n                <div\r\n                    className=\"result__hex\"\r\n                    style={{\r\n                        width: '100px',\r\n                        height: '100px',\r\n                        position: 'relative',\r\n                        backgroundColor: color ?? 'black',\r\n                        opacity: '0.75',\r\n                        clipPath: 'polygon(50% 0, 95% 25%, 95% 75%, 50% 100%, 5% 75%, 5% 25%)'\r\n                    }}\r\n                    >\r\n                    <div\r\n                        className=\"result__stats\"\r\n                        style={{\r\n                            width: '96px',\r\n                            height: '96px',\r\n                            position: 'relative',\r\n                            top: '50%',\r\n                            left: '50%',\r\n                            transform: 'translate(-50%, -50%)',\r\n                            backgroundColor: color === 'white' ? 'rgba(0, 0, 0, 0.75)' : 'rgba(255, 255, 255, 0.75)',\r\n                            clipPath: 'polygon(' + \r\n                                '50% ' + (50 - (scoreHP * 50)) + '%, ' +\r\n                                (50 + (scoreATK * 45)) + '% ' + (50 - (scoreATK * 25)) + '%, ' +\r\n                                (50 + (scoreDEF * 45)) + '% ' + (50 + (scoreDEF * 25)) + '%, ' +\r\n                                '50% ' + (50 + (scoreSPD * 50)) + '%, ' +\r\n                                (50 - (scoreSDEF * 45)) + '% ' + (50 + (scoreSDEF * 25)) + '%, ' +\r\n                                (50 - (scoreSATK * 45)) + '% ' + (50 - (scoreSDEF * 25)) + '%)'\r\n                        }}\r\n                    >\r\n                    </div>\r\n                </div>\r\n                <ul className=\"result__statList\">\r\n                    <li className=\"result__label\">\r\n                        HP <span className=\"result__score\">{props.pokemon.stats[0].base_stat}</span>\r\n                    </li>\r\n                    <li className=\"result__label\">\r\n                        ATK <span className=\"result__score\">{props.pokemon.stats[1].base_stat}</span>\r\n                    </li>\r\n                    <li className=\"result__label\">\r\n                        DEF <span className=\"result__score\">{props.pokemon.stats[2].base_stat}</span>\r\n                    </li>\r\n                    <li className=\"result__label\">\r\n                        S.ATK <span className=\"result__score\">{props.pokemon.stats[3].base_stat}</span>\r\n                    </li>\r\n                    <li className=\"result__label\">\r\n                        S.DEF <span className=\"result__score\">{props.pokemon.stats[4].base_stat}</span>\r\n                    </li>\r\n                    <li className=\"result__label\">\r\n                        SPD <span className=\"result__score\">{props.pokemon.stats[5].base_stat}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            </>\r\n            }\r\n        </a>\r\n    );\r\n}\r\n\r\n// Exportar\r\nexport default Result;","import React, { useCallback, useEffect, useState } from 'react';\nimport Result from './Result';\n\nfunction App() {\n\n\t// Hooks de estado\n\t// --- Setup inicial (quando montado)\n\tconst [hasSearched, setHasSearched] = useState(false);\n\tconst [errorSetup, setErrorSetup] = useState(false);\n\tconst [pokeList, setPokeList] = useState(undefined);\n\tconst [typeList, setTypeList] = useState(undefined);\n\tconst [typeRef, setTypeRef] = useState({});\n\t// --- Input do usuário\n\tconst [query, setQuery] = useState('');\n\tconst [typePrimary, setTypePrimary] = useState('');\n\tconst [typeSecondary, setTypeSecondary] = useState('');\n\tconst [fixedOrder, setFixedOrder] = useState(false);\n\t// --- Busca\n\tconst [searching, setSearching] = useState(false);\n\tconst [errorSearch, setErrorSearch] = useState(false);\n\tconst [typePrimaryList, setTypePrimaryList] = useState(undefined);\n\tconst [typeSecondaryList, setTypeSecondaryList] = useState(undefined);\n\tconst [typePrimaryReady, setTypePrimaryReady] = useState(false);\n\tconst [typeSecondaryReady, setTypeSecondaryReady] = useState(false);\n\t// --- Fetch individual de pokémons\n\tconst [results, setResults] = useState([]);\n\tconst [orderedResults, setOrderedResults] = useState([]);\n\tconst [ordering, setOrdering] = useState(false);\n\n\t// Hooks de efeito\n\t// --- Ao montar\n\tuseEffect(() => {\n\t\t// --- Obter lista de tipos\n\t\tfetch('https://pokeapi.co/api/v2/type/')\n\t\t\t.then(response => {\n\t\t\t\tif (response.ok === false) setErrorSetup(true);\n\t\t\t\tresponse.json()\n\t\t\t\t\t.then(data => {\n\t\t\t\t\t\tif (data.results === undefined || data.results.length <= 0) setErrorSetup(true);\n\t\t\t\t\t\tsetTypeList(data.results);\n\t\t\t\t\t});\n\t\t\t});\n\t\t// --- Obter lista de nomes\n\t\tfetch('https://pokeapi.co/api/v2/pokemon/?limit=9999')\n\t\t\t.then(response => {\n\t\t\t\tif (response.ok === false) setErrorSetup(true);\n\t\t\t\tresponse.json()\n\t\t\t\t\t.then(data => {\n\t\t\t\t\t\tif (data.results === undefined || data.results.length <= 0) setErrorSetup(true);\n\t\t\t\t\t\tconsole.log(data.results);\n\t\t\t\t\t\tsetPokeList(data.results);\n\t\t\t\t\t});\n\t\t\t});\n\t\tfetch('https://pokeapi.co/api/v2/pokemon-species/pidgeot')\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => console.log(data));\n\t}, []);\n\t// --- Durante a busca\n\tuseEffect(() => {\n\t\t// --- Somente quando a busca estiver pronta\n\t\tif ((searching && typePrimaryReady && typeSecondaryReady) === false) return;\n\t\tif (ordering === true) return;\n\t\t// --- Array de resultados, populado de acordo com os tipos buscados\n\t\tlet list = [];\n\t\tif (typePrimaryList === undefined) {\n\t\t\tif (typeSecondaryList === undefined) {\n\t\t\t\t// --- Tipos não foram especificados, será usada a lista completa de nomes\n\t\t\t\tlist = pokeList;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// --- Apenas tipo secundário\n\t\t\t\tlist = fixedOrder ?\n\t\t\t\t\ttypeSecondaryList\n\t\t\t\t\t\t.map(item => (item.slot === 2) ? item.pokemon : null)\n\t\t\t\t\t\t.filter(item => item !== null) :\n\t\t\t\t\ttypeSecondaryList\n\t\t\t\t\t\t.map(item => item.pokemon);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// --- Tipo primário especificado\n\t\t\tlist = fixedOrder ?\n\t\t\t\ttypePrimaryList\n\t\t\t\t\t.map(item => (item.slot === 1) ? item.pokemon : null)\n\t\t\t\t\t.filter(item => item !== null) :\n\t\t\t\ttypePrimaryList\n\t\t\t\t\t.map(item => item.pokemon);\n\t\t\tif (typeSecondaryList !== undefined) {\n\t\t\t\t// --- Ambos os tipos\n\t\t\t\tlet newList = [];\n\t\t\t\tfor (let i = 0; i < list.length; i++) {\n\t\t\t\t\tfor (let j = 0; j < typeSecondaryList.length; j++) {\n\t\t\t\t\t\tif (list[i].name === typeSecondaryList[j].pokemon.name) {\n\t\t\t\t\t\t\tnewList.push(typeSecondaryList[j].pokemon);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlist = newList;\n\t\t\t}\n\t\t}\n\t\t// --- Adaptar os termos de pesquisa (PokeAPI usa apenas letras minúsculas e números, sem acentos, espaços ou caracteres\n\t\t// --- especiais exceto '-' no lugar de espaços)\n\t\tlet queryList = query\n\t\t\t.toLowerCase()\n\t\t\t.normalize(\"NFD\")\n\t\t\t.replace(/[\\u0300-\\u036f]/g, \"\")\n\t\t\t.replace(/[^a-zA-Z0-9]/g,' ')\n\t\t\t.split(' ')\n\t\t\t.filter(item => item.length > 0);\n\t\t// --- Filtrar a lista de resultados dos tipos usando os termos\n\t\tlist = list.filter(item => {\n\t\t\tfor (let i = 0; i < queryList.length; i++) {\n\t\t\t\tif (item.name.indexOf(queryList[i]) === -1) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\tsetResults([]);\n\t\t// --- Se não houver resultados\n\t\tif (list.length <= 0) {\n\t\t\tsetOrderedResults([]);\n\t\t\t// --- Resetar variáveis internas de busca\n\t\t\tsetHasSearched(true);\n\t\t\tsetSearching(false);\n\t\t\tsetTypePrimaryList(undefined);\n\t\t\tsetTypePrimaryReady(false);\n\t\t\tsetTypeSecondaryList(undefined);\n\t\t\tsetTypeSecondaryReady(false);\n\t\t\tsetOrdering(false);\n\t\t}\n\t\t// --- Se houver, fazer o fetch de cada resultado individual\n\t\telse {\n\t\t\tfor (let i = 0; i < list.length; i++) {\n\t\t\t\tfetch(list[i].url)\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tif (response.ok === false) setErrorSearch(true);\n\t\t\t\t\t\tresponse.json()\n\t\t\t\t\t\t\t.then(data => {\n\t\t\t\t\t\t\t\tlet newResults = results;\n\t\t\t\t\t\t\t\tnewResults.push({\n\t\t\t\t\t\t\t\t\t...data, \n\t\t\t\t\t\t\t\t\tdexNumber: data.species.url\n\t\t\t\t\t\t\t\t\t\t.replace('https://pokeapi.co/api/v2/pokemon-species/', '')\n\t\t\t\t\t\t\t\t\t\t.replace('/', '')\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t// --- Quando chegar o último resultado, criar a lista ordenada por ID\n\t\t\t\t\t\t\t\tif (newResults.length >= list.length) {\n\t\t\t\t\t\t\t\t\thandleResults(newResults);\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\telse setResults(newResults);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tsetOrdering(true);\n\t\t}\n\t}, [searching, typePrimaryReady, typeSecondaryReady, ordering, pokeList, fixedOrder, query, results]);\n\n\t// Funções\n\t// --- Iniciar busca\n\tconst handleSubmit = (event) => {\n\t\t// --- Rejeitar se já houver uma pesquisa acontecendo\n\t\tevent.preventDefault();\n\t\tif (searching) return;\n\t\tsetSearching(true);\n\t\tsetErrorSearch(false);\n\t\t// --- Listar todos os pokémon contendo o tipo primário\n\t\tif (typePrimary === '') {\n\t\t\t// --- Manter indefinido no caso de qualquer tipo\n\t\t\tsetTypePrimaryList(undefined);\n\t\t\tsetTypePrimaryReady(true);\n\t\t}\n\t\telse if (typeRef[typePrimary]) {\n\t\t\t// --- Usar typeRef caso a informação já esteja armazenada\n\t\t\tsetTypePrimaryList(typeRef[typePrimary]);\n\t\t\tsetTypePrimaryReady(true);\n\t\t}\n\t\telse {\n\t\t\t// --- Do contrário, buscar a informação e guardá-la como propriedade de typeRef\n\t\t\tfetch('https://pokeapi.co/api/v2/type/' + typePrimary)\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (response.ok === false) setErrorSearch(true);\n\t\t\t\t\tresponse.json()\n\t\t\t\t\t\t.then(data => {\n\t\t\t\t\t\t\tif (data.pokemon === undefined || data.pokemon.length <= 0) setErrorSearch(true);\n\t\t\t\t\t\t\tsetTypeRef({...typeRef, [typePrimary]: data.pokemon})\n\t\t\t\t\t\t\tsetTypePrimaryList(data.pokemon);\n\t\t\t\t\t\t\tsetTypePrimaryReady(true);\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t\t// --- Repetir o processo com o tipo secundário\n\t\tif (typeSecondary === '' || typeSecondary === typePrimary || typeSecondary === 'none') {\n\t\t\t// --- Manter indefinido no caso de qualquer tipo\n\t\t\tsetTypeSecondaryList(undefined);\n\t\t\tsetTypeSecondaryReady(true);\n\t\t}\n\t\telse if (typeRef[typeSecondary]) {\n\t\t\t// --- Usar typeRef caso a informação já esteja armazenada\n\t\t\tsetTypeSecondaryList(typeRef[typeSecondary]);\n\t\t\tsetTypeSecondaryReady(true);\n\t\t}\n\t\telse {\n\t\t\t// --- Do contrário, buscar a informação e guardá-la como propriedade de typeRef\n\t\t\tfetch('https://pokeapi.co/api/v2/type/' + typeSecondary)\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (response.ok === false) setErrorSearch(true);\n\t\t\t\t\tresponse.json()\n\t\t\t\t\t\t.then(data => {\n\t\t\t\t\t\t\tif (data.pokemon === undefined || data.pokemon.length <= 0) setErrorSearch(true);\n\t\t\t\t\t\t\tsetTypeRef({...typeRef, [typeSecondary]: data.pokemon})\n\t\t\t\t\t\t\tsetTypeSecondaryList(data.pokemon);\n\t\t\t\t\t\t\tsetTypeSecondaryReady(true);\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t}\n\t// --- Finalizar busca ordenando os resultados\n\tconst handleResults = (unorderedResults) => {\n\t\t// --- Ordenar por ID (o ID usado pela PokeAPI é diferente do ID da pokédex, mas o ID real pode ser\n\t\t// --- extraído da URL da página da espécie)\n\t\tlet list = unorderedResults;\n\t\tlist.sort((a, b) => parseInt(a.dexNumber) - parseInt(b.dexNumber));\n\t\tif (typeSecondary === 'none') list = list.filter(item => item.types.length < 2);\n\t\tconsole.log(list);\n\t\tsetOrderedResults(list);\n\t\tsetResults([]);\n\t\t// --- Resetar variáveis internas de busca\n\t\tsetHasSearched(true);\n\t\tsetSearching(false);\n\t\tsetTypePrimaryList(undefined);\n\t\tsetTypePrimaryReady(false);\n\t\tsetTypeSecondaryList(undefined);\n\t\tsetTypeSecondaryReady(false);\n\t\tsetOrdering(false);\n\t}\n\n\t// Renderizar\n\treturn (\n\t\t<>\n\t\t<main className=\"search\">\n\t\t\t<h1 className=\"search__title\">\n\t\t\t\tTemos que Buscar!\n\t\t\t</h1>\n\t\t\t<span className=\"search__hint\">\n\t\t\t\tDigite o nome (ou parte do nome) de um pokémon e/ou selecione seus tipos\n\t\t\t</span>\n\t\t\t<div className=\"search__box\">\n\t\t\t\t<p className={'search__error' + (errorSetup ? ' search__error_visible' : '')}>\n\t\t\t\t\tNão foi possível coletar as informações necessárias, tente novamente mais tarde :(\n\t\t\t\t</p>\n\t\t\t\t<form\n\t\t\t\t\tclassName={'search__form' + (errorSetup ? ' search__form_hidden' : '')}\n\t\t\t\t\tonSubmit={event => handleSubmit(event)}\n\t\t\t\t\t>\n\t\t\t\t\t<label className=\"search__labelAria\" htmlFor=\"searchName\">Nome</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"search__input\"\n\t\t\t\t\t\tid=\"searchName\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Nome do pokémon\"\n\t\t\t\t\t\tmaxLength={32}\n\t\t\t\t\t\tvalue={query}\n\t\t\t\t\t\tonChange={event => setQuery(event.target.value)}\n\t\t\t\t\t\tdisabled={searching}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"search__typeFlex\">\n\t\t\t\t\t\t<label className=\"search__labelAria\" htmlFor=\"searchType1\">Tipo Primário</label>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tclassName=\"search__drop\"\n\t\t\t\t\t\t\tid=\"searchType1\"\n\t\t\t\t\t\t\tvalue={typePrimary}\n\t\t\t\t\t\t\tdisabled={typeList === undefined || searching}\n\t\t\t\t\t\t\tonChange={event => setTypePrimary(event.target.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{typeList === undefined ?\n\t\t\t\t\t\t\t\t<option value={''}>Carregando...</option>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<option value={''}>Qualquer Tipo</option>\n\t\t\t\t\t\t\t\t{typeList.map((t => { return(\n\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\tkey={t.url}\n\t\t\t\t\t\t\t\t\t\tvalue={t.name}\n\t\t\t\t\t\t\t\t\t\tdisabled={t.name === typeSecondary}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{t.name}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t);}))}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<label className=\"search__labelAria\" htmlFor=\"searchType2\">Tipo Secundário</label>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tclassName=\"search__drop\"\n\t\t\t\t\t\t\tid=\"searchType2\"\n\t\t\t\t\t\t\tvalue={typeSecondary}\n\t\t\t\t\t\t\tdisabled={typeList === undefined || searching}\n\t\t\t\t\t\t\tonChange={event => setTypeSecondary(event.target.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{typeList === undefined ?\n\t\t\t\t\t\t\t\t<option value={''}>Carregando...</option>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<option value={''}>Qualquer Tipo</option>\n\t\t\t\t\t\t\t\t<option value={'none'}>Nenhum</option>\n\t\t\t\t\t\t\t\t{typeList.map((t => { return(\n\t\t\t\t\t\t\t\t\t<option\n\t\t\t\t\t\t\t\t\t\tkey={t.url}\n\t\t\t\t\t\t\t\t\t\tvalue={t.name}\n\t\t\t\t\t\t\t\t\t\tdisabled={t.name === typePrimary}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{t.name}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t);}))}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"search__checkFlex\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"search__check\"\n\t\t\t\t\t\t\tid=\"searchCheck\"\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tchecked={fixedOrder}\n\t\t\t\t\t\t\tonChange={event => setFixedOrder(event.target.checked)}\n\t\t\t\t\t\t\tdisabled={searching}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label className=\"search__label\" htmlFor=\"searchCheck\">\n\t\t\t\t\t\t\tApenas tipos nessa ordem exata\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button\n\t\t\t\t\t\tdisabled={pokeList === undefined || searching}\n\t\t\t\t\t\tclassName={'search__submit' + (searching ? ' search__submit_progress' : '')}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t{searching ? 'Buscando' : 'Buscar'}\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</main>\n\t\t<div className={'list' + (hasSearched ? ' list_visible' : '')}>\n\t\t\t{errorSearch ?\n\t\t\t<p className=\"list__error\">\n\t\t\t\tNão foi possível realizar a pesquisa. Tente novamente mais tarde :(\n\t\t\t</p>\n\t\t\t:\n\t\t\torderedResults.length <= 0 ?\n\t\t\t<p className=\"list__text\">\n\t\t\t\tNenhum resultado encontrado. Quem sabe usando uma configuração diferente?\n\t\t\t</p>\n\t\t\t:\n\t\t\t<ul className=\"list__results\">\n\t\t\t\t{orderedResults.map(result => { return (\n\t\t\t\t\t<li className=\"result\" key={result.name}>\n\t\t\t\t\t\t<Result pokemon={result} />\n\t\t\t\t\t</li>\n\t\t\t\t);})}\n\t\t\t</ul>\n\t\t\t}\n\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport './style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}